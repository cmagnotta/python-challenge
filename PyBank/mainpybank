import osimport csvbudget_data = os.path.join('budget_data.csv')with open ('budget_data.csv', 'r') as csvfile:    budget_data = csv.reader(csvfile)    next(budget_data)                             numMonths = 0    totalProfits = 0    def ProfitDifference(budget_data):        """        Parameters    ----------    budget_data : TYPE        This is meant to find the difference between each row in order to perform an analysis of the profits/losses in the budget data.    Returns    -------    ProfitDifference : TYPE        DESCRIPTION.    """    ProfitDifference = totalProfits - (totalProfits + 1)    averageProfitChange = ProfitDifference/numMonths    greatestProfitChange = max(ProfitDifference) + str(rows[0])    greatestProfitLoss = min(ProfitDifference) + str(rows[0])    print(f"Average Change in Profits: {averageProfitChange})")    print(f"Greatest Increase in Profits: {greatestProfitChange}")    print(f"Greatest Loss in Profits: {greatestProfitLoss}")               with open ('budget_data.csv', 'r') as csvfile:    budget_data = csv.reader(csvfile)    next(budget_data)                             numMonths = 0    totalProfits = 0        for rows in budget_data:        months = str(rows[0])        numMonths += 1        totalProfits += int(rows[1])        averageProfits = totalProfits/numMonths                print(f"Total Months: {numMonths}")        print(f"Total: {totalProfits}")        print(f"Average Profit: {averageProfits}")                               #def ProfitDifference(budget_data):                #ProfitDifference = totalProfits - (totalProfits + 1)        #averageProfitChange = ProfitDifference/numMonths        #greatestProfitChange = max(ProfitDifference) + str(rows[0])        #greatestProfitLoss = min(ProfitDifference) + str(rows[0])                        #print(f"Average Change in Profits: {averageProfitChange})")        #print(f"Greatest Increase in Profits: {greatestProfitChange}")        #print(f"Greatest Loss in Profits: {greatestProfitLoss}")                  #have functions defined at the top       #printing my function, but to use                            #return(min(lprofit_difference)) and print(months)          #here's the syntax for printing with variables.#print(f'Hello I am {my_info["name"]} and I am a {my_info["occupation"]}')#def profit_difference ():#print(f"Stats for {name}")#i = 0#for rows in row_data: #if i != 0:  #last_month = rows[i - 1] #else:  #last_month = 0 #profit_difference = rows[i] - rows[i - 1  #greatest increase, do an array at the beginning. at the loop#current month - next month and then find the greatest number in that aray.#header#r = [i for i in range(len(randomdata))]   #from an example that theo did.   #i think this will be important.           #You forget to enclose code inside a special statement like a for loop, a while loop, or a function.#You do not close all of the parenthesis on a line of code in your program.